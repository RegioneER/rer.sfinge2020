<?php

namespace DocumentoBundle\Entity;

use Doctrine\ORM\EntityRepository;
use DocumentoBundle\Form\Entity\RicercaDocumento;
use Doctrine\ORM\NoResultException;

/**
 * DocumentoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DocumentoRepository extends EntityRepository
{

    public function cercaDaPath($file_path){
        $dql = "SELECT d from DocumentoBundle:DocumentoFile d
              WHERE CONCAT(d.path, d.nome) = :file_path";

        $q = $this->getEntityManager()->createQuery();
        $q->setDQL($dql);
        $q->setParameter("file_path", $file_path);

        $result = $q->getResult();
        
        if(count($result) == 0){
             throw new NoResultException;
        } else {
            return $result[count($result)-1];
        }
    }

    public function cercaSuperAdmin(RicercaDocumento $dati){
        $dql = "SELECT DISTINCT d FROM DocumentoBundle:Documento d
                LEFT JOIN d.tipologia_documento td
				WHERE 1=1 ";

        $q = $this->getEntityManager()->createQuery();

        if ($dati->getId() != "") {
            $dql .= " AND d.id = :id";
            $q->setParameter(":id", $dati->getId());
        }

        if ($dati->getNome() != "") {
            $dql .= " AND d.nome LIKE :nome";
            $q->setParameter(":nome", "%" . $dati->getNome() . "%");
        }

        if (!is_null($dati->getTipologia())) {
            $dql .= " AND td.codice = :tipologia_documento";
            $q->setParameter(":tipologia_documento", $dati->getTipologia()->getCodice());
        }

        $q->setDQL($dql);
        return $q;
    }
}