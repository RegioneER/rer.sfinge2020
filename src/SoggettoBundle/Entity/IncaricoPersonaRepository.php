<?php

namespace SoggettoBundle\Entity;

use AnagraficheBundle\Entity\Persona;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use SoggettoBundle\Form\Entity\RicercaIncaricatiGestione;
use SoggettoBundle\Form\Entity\RicercaSoggetto;

/**
 * SoggettoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IncaricoPersonaRepository extends EntityRepository {

    public function contaAttiviDaSoggetto(Soggetto $soggetto){
        $dql = "SELECT COUNT(DISTINCT i.id) from SoggettoBundle:IncaricoPersona i
                JOIN i.soggetto s
                JOIN i.stato si
                WHERE s.id = :soggettoId AND si.codice = :statoAttivo";


        $q = $this->getEntityManager()->createQuery();
        $q->setParameter("soggettoId", $soggetto->getId());
        $q->setParameter("statoAttivo", StatoIncarico::ATTIVO);
        $q->setDQL($dql);

        return $q->getSingleScalarResult();
    }

    public function contaAttiviDaSoggettoIncarico(Soggetto $soggetto, TipoIncarico $tipoIncarico){
        $dql = "SELECT COUNT(DISTINCT i.id) from SoggettoBundle:IncaricoPersona i
                JOIN i.soggetto s
                JOIN i.tipo_incarico ti
                JOIN i.stato si
                WHERE s.id = :soggettoId AND si.codice = :statoAttivo AND ti.codice = :codiceTipoIncarico";


        $q = $this->getEntityManager()->createQuery();
        $q->setParameter("soggettoId", $soggetto->getId());
        $q->setParameter("codiceTipoIncarico", $tipoIncarico->getCodice());
        $q->setParameter("statoAttivo", StatoIncarico::ATTIVO);
        $q->setDQL($dql);

        return $q->getSingleScalarResult();
    }

    public function haIncaricoAttivo(Soggetto $soggetto, TipoIncarico $tipoIncarico){
        $dql = "SELECT COUNT(DISTINCT i.id) from SoggettoBundle:IncaricoPersona i
                JOIN i.soggetto s
                JOIN i.stato si
                JOIN i.tipo_incarico ti
                WHERE s.id = :soggettoId AND si.codice = :statoAttivo AND ti.codice = :tipoIncarico";


        $q = $this->getEntityManager()->createQuery();
        $q->setParameter("soggettoId", $soggetto->getId());
        $q->setParameter("tipoIncarico", $tipoIncarico->getCodice());
        $q->setParameter("statoAttivo", StatoIncarico::ATTIVO);
        $q->setDQL($dql);

        return $q->getSingleScalarResult()>0;
    }

    public function haIncaricoPersonaAttivo(Soggetto $soggetto, Persona $persona, TipoIncarico $tipoIncarico){
        $dql = "SELECT COUNT(DISTINCT i.id) from SoggettoBundle:IncaricoPersona i
                JOIN i.soggetto s
                JOIN i.stato si
                JOIN i.incaricato p
                JOIN i.tipo_incarico ti
                WHERE s.id = :soggettoId AND si.codice = :statoAttivo AND p.id = :personaId AND ti.codice = :tipoIncarico";


        $q = $this->getEntityManager()->createQuery();
        $q->setParameter("soggettoId", $soggetto->getId());
        $q->setParameter("statoAttivo", StatoIncarico::ATTIVO);
        $q->setParameter("personaId", $persona->getId());
        $q->setParameter("tipoIncarico", $tipoIncarico->getCodice());
        $q->setDQL($dql);
		
        return $q->getSingleScalarResult()>0;
    }

    public function getIncarichiPersoneGestione(RicercaIncaricatiGestione $dati){
        $dql = "SELECT ip from SoggettoBundle:IncaricoPersona ip
				JOIN ip.incaricato p
				JOIN ip.soggetto s
				JOIN ip.tipo_incarico ti
				JOIN ip.stato si
				WHERE 1=1 ";

        /*******/
        $q = $this->getEntityManager()->createQuery();


        if (!\is_null($dati->getIncarico())) {
			$incarichi = $dati->getIncarico();
			
			if (!is_array($incarichi)) {
				$incarichi = array($incarichi);
			}
			
			$dql .= " AND ti.codice IN ('".implode("','", $incarichi)."')";
        }

        if ($dati->getCodiceFiscale() != "") {
        $dql .= " AND p.codice_fiscale = :codice_fiscale";
        $q->setParameter(":codice_fiscale", $dati->getCodiceFiscale());
        }

        if ($dati->getNome() != "") {
        $dql .= " AND p.nome LIKE :nome";
        $q->setParameter(":nome", "%" . $dati->getNome() . "%");
        }

        if ($dati->getCognome() != "") {
        $dql .= " AND p.cognome LIKE :cognome";
        $q->setParameter(":cognome", "%" . $dati->getCognome() . "%");
        }

        if ($dati->getDenominazione() != "") {
            $dql .= " AND s.denominazione LIKE :denominazione";
            $q->setParameter(":denominazione", "%" . $dati->getDenominazione() . "%");
        }

        if ($dati->getCodiceFiscaleSoggetto() != "") {
            $dql .= " AND s.codice_fiscale LIKE :codice_fiscale_soggetto";
            $q->setParameter(":codice_fiscale_soggetto", "%" . $dati->getCodiceFiscaleSoggetto() . "%");
        }

        if ($dati->getStatoIncarico() != "") {
            $dql .= " AND si.codice = :stato_incarico";
            $q->setParameter(":stato_incarico", $dati->getStatoIncarico()->getCodice() );
        }
		
        $q->setDQL($dql);

        return $q;

    }
	
	public function getIncarichiPersoneGestioneManagerPA(RicercaIncaricatiGestione $dati){
        $dql = "SELECT ip from SoggettoBundle:IncaricoPersona ip
				JOIN ip.incaricato p
				JOIN ip.soggetto s
				JOIN ip.tipo_incarico ti
				JOIN ip.stato si
				WHERE 1=1 ";

        /*******/
        $q = $this->getEntityManager()->createQuery();

        if (!\is_null($dati->getIncarico())) {
			$incarichi = $dati->getIncarico();
			
			if (!is_array($incarichi)) {
				$incarichi = array($incarichi);
			}
			
			$dql .= " AND ti.codice IN ('".implode("','", $incarichi)."')";
        } else {
			$dql .= " AND ti.codice IN ('LR','DELEGATO')";
		}

        if ($dati->getCodiceFiscale() != "") {
			$dql .= " AND p.codice_fiscale = :codice_fiscale";
			$q->setParameter(":codice_fiscale", $dati->getCodiceFiscale());
        }

        if ($dati->getNome() != "") {
			$dql .= " AND p.nome LIKE :nome";
			$q->setParameter(":nome", "%" . $dati->getNome() . "%");
        }

        if ($dati->getCognome() != "") {
			$dql .= " AND p.cognome LIKE :cognome";
			$q->setParameter(":cognome", "%" . $dati->getCognome() . "%");
        }

        if ($dati->getDenominazione() != "") {
            $dql .= " AND s.denominazione LIKE :denominazione";
            $q->setParameter(":denominazione", "%" . $dati->getDenominazione() . "%");
        }

        if ($dati->getCodiceFiscaleSoggetto() != "") {
            $dql .= " AND s.codice_fiscale LIKE :codice_fiscale_soggetto";
            $q->setParameter(":codice_fiscale_soggetto", "%" . $dati->getCodiceFiscaleSoggetto() . "%");
        }

        if ($dati->getStatoIncarico() != "") {
            $dql .= " AND si.codice = :stato_incarico";
            $q->setParameter(":stato_incarico", $dati->getStatoIncarico()->getCodice() );
        }
		
		

        $q->setDQL($dql);

        return $q;

    }
    
    public function haIncaricoPersonaLRDELAttivo(Soggetto $soggetto, $personaCf){
        $dql = "SELECT COUNT(DISTINCT i.id) from SoggettoBundle:IncaricoPersona i
                JOIN i.soggetto s
                JOIN i.stato si
                JOIN i.incaricato p
                JOIN i.tipo_incarico ti
                WHERE s.id = :soggettoId AND si.codice = :statoAttivo AND p.codice_fiscale = :personaCf AND ti.codice IN ('DELEGATO','LR')";


        $q = $this->getEntityManager()->createQuery();
        $q->setParameter("soggettoId", $soggetto->getId());
        $q->setParameter("statoAttivo", StatoIncarico::ATTIVO);
        $q->setParameter("personaCf", $personaCf);
        $q->setDQL($dql);
		
        return $q->getSingleScalarResult()>0;
    }
    
    public function haIncaricoPersonaOpRichAttivo(Soggetto $soggetto, $personaCf){
        $dql = "SELECT COUNT(DISTINCT i.id) from SoggettoBundle:IncaricoPersona i
                JOIN i.soggetto s
                JOIN i.stato si
                JOIN i.incaricato p
                JOIN i.tipo_incarico ti
                WHERE s.id = :soggettoId AND si.codice = :statoAttivo AND p.codice_fiscale = :personaCf AND ti.codice IN ('OPERATORE_RICHIESTA')";


        $q = $this->getEntityManager()->createQuery();
        $q->setParameter("soggettoId", $soggetto->getId());
        $q->setParameter("statoAttivo", StatoIncarico::ATTIVO);
        $q->setParameter("personaCf", $personaCf);
        $q->setDQL($dql);
		
        return $q->getSingleScalarResult()>0;
    }
}
