# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
  gedmo.listener.softdeleteable:
      class: Gedmo\SoftDeleteable\SoftDeleteableListener
      tags:
          - { name: doctrine.event_subscriber, connection: default }
      calls:
          - [ setAnnotationReader, [ '@annotation_reader' ] ]
          
  gedmo.listener.blameable:
    class: Gedmo\Blameable\BlameableListener
    tags:
        - { name: doctrine.event_subscriber, connection: default }
    calls:
        - [ setAnnotationReader, [ '@annotation_reader' ] ]
        - [ setUserValue, [ '@sfinge.username' ] ]
  
  monolog.processor.web_processor:
        class: Monolog\Processor\WebProcessor
        tags:
            - { name: monolog.processor, method: __invoke } 

  monolog.processor.extra:
        class: BaseBundle\Log\ClientIpProcessor
        arguments:  ['@service_container', '@request_stack', '@session' ]
        tags:
            - { name: monolog.processor }
        
  monolog.formatter.standard:
    class: Monolog\Formatter\LineFormatter
    arguments:
        format: "%%datetime%% | %%extra.user%% | %%extra.token%% | %%extra.client_ip%% | %%channel%%.%%level_name%%: %%message%% %%context%%\n"
        
  schema.twig.assi_con_au:
        class: SoggettoBundle\TwigExtension\AssiConAutoritaUrbanaTwigExtension
        arguments: ['@service_container']
        tags:
          - { name: twig.extension }

  schema.twig.base64:
    class: BaseBundle\TwigExtension\Base64TwigExtension
    arguments: [ '@service_container' ]
    tags:
      - { name: twig.extension }

  validator.cf_validator:
    class: BaseBundle\Validator\Constraints\CfValidator
    tags:
      - { name: validator.constraint_validator, alias: codice_fiscale_checks}

  validator.cf_soggetto_validator:
      class: BaseBundle\Validator\Constraints\CfSoggettoValidator
      tags:
          - { name: validator.constraint_validator, alias: codice_fiscale_soggetto_checks}

  app.manager.pagamento_manager:
    class: AttuazioneControlloBundle\Manager\PagamentoManager
    arguments: ["@doctrine.orm.entity_manager"]

  app.manager.comunicazioni_manager:
    class: IstruttorieBundle\Manager\ComunicazioniManager
    arguments: ["@doctrine.orm.entity_manager"]
    
  app.security.access_denied_handler:
        class: BaseBundle\Security\AccessDeniedHandler
        arguments: ['@service_container']
        
  generaIstruttoriaCommand:
    class: IstruttorieBundle\Command\generaIstruttoriaCommand
    calls:
        - [setContainer, ["@service_container"] ]
        
  aggiornaRinviatiCommand:
    class: AttuazioneControlloBundle\Command\aggiornaRinviatiCommand
    calls:
        - [setContainer, ["@service_container"] ]